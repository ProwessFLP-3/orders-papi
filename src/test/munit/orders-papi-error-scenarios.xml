<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="webhook-eapi-error-scenarios.xml" />
	<munit:test name="BAD_REQUEST" doc:id="5ec6f8ac-67b9-4e2b-b3c9-2f3650d10d18" expectedErrorType="APIKIT:BAD_REQUEST">
		<munit:behavior >
			<munit-tools:mock-when doc:name="APIKIT Router" doc:id="471f30bf-b1f2-4cc6-9b50-a33f144d49f2" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="orders-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:BAD_REQUEST" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="orders-papi-main" doc:id="dfb08784-64dd-48d9-b579-99a1f9415cf9" name="orders-papi-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="b9903ec5-37c6-4164-a31b-5ab84ce08186" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="METHOD_NOT_ALLOWED" doc:id="3839a77c-1e65-443d-b9f3-b62f5e21ebc4" expectedErrorType="APIKIT:METHOD_NOT_ALLOWED" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="APIKIT Router" doc:id="5a9a25d9-bb59-45fe-98bf-4626dabc2a12" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="orders-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:METHOD_NOT_ALLOWED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="orders-papi-main" doc:id="887cbe85-47d2-486d-89ae-591f8a4f1477" name="orders-papi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="a5b9f341-b557-4a61-b8b9-524cb9555cee" expression="#[payload]" is="#[MunitTools::notNullValue()]" />
		</munit:validation>
	</munit:test>
	<munit:test name="NOT_ACCEPTABLE" doc:id="6e3cce9d-8fd6-43f7-a525-0b34147ca923" expectedErrorType="APIKIT:NOT_ACCEPTABLE" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="APIKIT Router" doc:id="131395c1-8423-4955-9313-443f3367efce" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="orders-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_ACCEPTABLE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="orders-papi-main" doc:id="64c8efc9-6993-48e2-a2c4-02af55b45c87" name="orders-papi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="0f2f2c43-5492-42c7-a95e-ba97aba5055f" expression="#[payload]" is="#[MunitTools::notNullValue()]" />
		</munit:validation>
	</munit:test>
	<munit:test name="NOT_FOUND" doc:id="d5c6c1b9-f235-474b-a95e-4315639d6a36" expectedErrorType="APIKIT:NOT_FOUND" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="APIKIT Router" doc:id="17fc9fa6-f20b-41ac-9d70-0eca3f7077d9" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="orders-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="orders-papi-main" doc:id="36a94751-5643-4015-9224-ce012bc256ec" name="orders-papi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="a40c370f-477a-4456-bb2b-35ca1f74e173" expression="#[payload]" is="#[MunitTools::notNullValue()]" />
		</munit:validation>
	</munit:test>
	<munit:test name="NOT_IMPLEMENTED" doc:id="fadfcae8-d30f-46cc-a5bf-a7a74d1445f2" expectedErrorType="APIKIT:NOT_IMPLEMENTED" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="APIKIT Router" doc:id="5b4fc29b-e63d-4555-acf5-a91f220c04ce" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="orders-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_IMPLEMENTED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="orders-papi-main" doc:id="d996a757-759a-40a4-b566-368781354173" name="orders-papi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="7a4c97fa-d5e1-4278-8c35-0d736a5f591a" expression="#[payload]" is="#[MunitTools::notNullValue()]" />
		</munit:validation>
	</munit:test>
	<munit:test name="UNSUPPORTED_MEDIA_TYPE" doc:id="5db3a882-300a-466a-861e-530cc456e3a2" expectedErrorType="APIKIT:UNSUPPORTED_MEDIA_TYPE" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="APIKIT Router" doc:id="2275c3d1-8b0a-491d-8e9c-ba74065bca4d" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="orders-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:UNSUPPORTED_MEDIA_TYPE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="orders-papi-main" doc:id="e4bd71eb-c763-485b-99ec-1e11b9485ee2" name="orders-papi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="a2109883-7f66-485b-bfba-9d0581604388" expression="#[payload]" is="#[MunitTools::notNullValue()]" />
		</munit:validation>
	</munit:test>
	<munit:test name="ANY" doc:id="81a21d87-2c2a-4bad-907a-9173f0e2a370" expectedErrorType="APIKIT:ANY" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="APIKIT Router" doc:id="7c29d6da-5319-4c24-829f-6e04ae7aeac9" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="orders-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:ANY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="orders-papi-main" doc:id="41f4741c-81f0-4024-9900-5e5bdb9db003" name="orders-papi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="a3feb47b-4586-4a0e-9dbc-1570b4d90ab5" expression="#[payload]" is="#[MunitTools::notNullValue()]" />
		</munit:validation>
	</munit:test>
	<munit:test name="CONNECTIVITY" doc:id="3d61a148-2a97-4b35-bc8e-94b57d527fbb" expectedErrorType="HTTP:CONNECTIVITY" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="APIKIT Router" doc:id="efb3a152-5537-4533-9afe-f8bc6bc47563" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="orders-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:CONNECTIVITY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="orders-papi-main" doc:id="32632d6e-3b38-417f-81ef-bff7f2b5f9aa" name="orders-papi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="b0bd1435-1888-4e05-82b4-2607d61e3fe3" expression="#[payload]" is="#[MunitTools::notNullValue()]" />
		</munit:validation>
	</munit:test>
	<munit:test name="FORBIDDEN" doc:id="bdb1af77-70cb-4339-9952-ab66fa23b81e" expectedErrorType="HTTP:FORBIDDEN" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="APIKIT Router" doc:id="02265744-2edd-4842-840f-974efc921fee" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="orders-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:FORBIDDEN" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="orders-papi-main" doc:id="6260651d-7f65-4e02-bb0d-5b3012b44784" name="orders-papi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="4f5a6351-3e28-4bc5-8391-cb0bf4bec453" expression="#[payload]" is="#[MunitTools::notNullValue()]" />
		</munit:validation>
	</munit:test>
	<munit:test name="UNAUTHORIZED" doc:id="d151e824-478f-4d98-9b92-aed5e40a3bf0" expectedErrorType="HTTP:UNAUTHORIZED" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="APIKIT Router" doc:id="6f64a87b-9071-425b-a0e8-784d333337be" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="orders-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:UNAUTHORIZED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="orders-papi-main" doc:id="36c719c6-be88-4a94-b145-4a9df0eebf20" name="orders-papi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="f65a0b0d-daf8-46c1-a9a4-cfa182c83588" expression="#[payload]" is="#[MunitTools::notNullValue()]" />
		</munit:validation>
	</munit:test>
	<munit:test name="INTERNAL_SERVER_ERROR" doc:id="ed787092-03f5-4591-bb93-74158c57038d" expectedErrorType="HTTP:INTERNAL_SERVER_ERROR" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="APIKIT Router" doc:id="932a7a73-f031-42c1-8405-a662ea2a837b" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="orders-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:INTERNAL_SERVER_ERROR" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="orders-papi-main" doc:id="de8c99fe-b917-4522-afe3-3eff07c0ce71" name="orders-papi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="3cf7bbd5-c56e-446b-9684-483e87502029" expression="#[payload]" is="#[MunitTools::notNullValue()]" />
		</munit:validation>
	</munit:test>


</mule>
